---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/register":
    post:
      summary: Registers a new user
      tags:
      - Authentication
      parameters: []
      responses:
        '201':
          description: User registered successfully
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: password123
                password_confirmation:
                  type: string
                  example: password123
              required:
              - email
              - password
              - password_confirmation
  "/login":
    post:
      summary: Logs in a user
      tags:
      - Authentication
      parameters: []
      responses:
        '200':
          description: User logged in successfully
        '401':
          description: Unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: password123
              required:
              - email
              - password
  "/validate_token":
    get:
      summary: Validates a JWT token
      tags:
      - Authentication
      security:
      - BearerAuth: []
      responses:
        '200':
          description: Token is valid
        '401':
          description: Unauthorized
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    UserRegistration:
      type: object
      required:
      - email
      - password
      - password_confirmation
      properties:
        email:
          type: string
          example: user@example.com
        password:
          type: string
          example: password123
        password_confirmation:
          type: string
          example: password123
    UserLogin:
      type: object
      required:
      - email
      - password
      properties:
        email:
          type: string
          example: user@example.com
        password:
          type: string
          example: password123
    AuthToken:
      type: object
      properties:
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6...
      required:
      - token
    ErrorResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            type: string
          example:
          - Invalid email or password
      required:
      - errors
    SuccessMessage:
      type: object
      properties:
        message:
          type: string
          example: Token is valid
      required:
      - message
